function kcswitch() {
    kcontext=$(kubectl config get-contexts -o name | peco --prompt='new context >' |  sed -e 's/^\*//' | awk '{print $1}')
    if [ -n "$kcontext" ]; then
        kubectl config use-context $kcontext
    fi
}

function gcloud-switch() {
    project=$(gcloud projects list --format="value(name)" | peco --prompt='new project >' |  sed -e 's/^\*//' | awk '{print $1}')
    if [ -n "$project" ]; then
        gcloud config set project --verbosity="debug" $project
    fi
}

function cdv() {
    dir=$(ghq list -p | peco)
    if [ -n "$dir" ]; then
        cd $dir
    fi
}

function is_git_dir() {
    [ -d .git ] || git rev-parse --git-dir > /dev/null 2>&1
}

function gcr() {
    is_git_dir
    if [ $? != 0 ]; then
      echo "Not git repo"
      return 1
    fi
    branch=$(git branch -a --format='%(refname:short)' | peco)
    if [ -n "$branch" ]; then
      local=${branch#origin/}
      git rev-parse --verify $local > /dev/null 2>&1
      if [ $? -eq 0 ]; then
        git checkout $local
      else
        git checkout -b $local $branch
      fi
    fi
}

function gbd() {
    is_git_dir
    if [ $? != 0 ]; then
      echo "Not git repo"
      return 1
    fi
    branch=$(git branch --format='%(refname:short)' | peco)
    if [ -n "$branch" ]; then
      git branch -D $branch
    fi
}

function peco-select-history() {
    BUFFER=$(\history -n 1 | \
        eval "tail -r" | \
        peco --query "$LBUFFER")
    CURSOR=$#BUFFER
    zle clear-screen
}
zle -N peco-select-history
bindkey '^r' peco-select-history
